#!/usr/bin/env python3
import sys
import os
from datetime import datetime
import argparse


parser = argparse.ArgumentParser(description="Record notes into a text file.")
parser.add_argument('add', nargs='*', help="text to be added to note")
parser.add_argument('-r', '--read', action='store_true', help="read the note file for today, if one exists")
parser.add_argument('-b', '--browse', help="passed with date (02-14-20) will read specific note file")
parser.add_argument('-l', '--list', action='store_true', help="lists all note files in the note directory")
args = parser.parse_args()

# configuration
notes_dir = '/Users/taylorturner/Documents/Notes/'
file_name = datetime.now().strftime('%Y') + ('.notes')
file_path = notes_dir + file_name

# Writes text to a file, if file doesn't exist it creates one
def write_note(text):
  text = " ".join(text)

  if not os.path.isdir(notes_dir):
    os.mkdir(notes_dir)

  with open (file_path, 'a') as infile:
    text = text + '\n'
    infile.write(datetime.now().strftime('%m-%d|%H:%M:%S') + ' ' + text)

# Reads most recent notes text file
def read_notes():
  if os.path.exists(file_path):
    with open(file_path, 'r') as infile:
      content = infile.read()
      print(content)
  else:
    print("Unfortunately, there are no notes to read. Have you started one? Please see help for more options")

# Will be irrelevant, should be replaced with a parser
def browse_notes(date):
  if datetime.strptime(date, '%m-%d-%y'):
    print(f"Looking up note that matches date '{date}'...")
  else:
    print("That doesn't look like a valid date format, try something like '02-14-20'")
    return

  file_list = os.listdir(notes_dir)
  for file in file_list:
    if date in file:
      file = notes_dir + file
      print(file)
      with open(file, 'r') as infile:
        for line in infile:
          print(line)

# TODO Should print full paths
def list_notes():
  try:
    file_list = os.listdir(notes_dir)
    for file in file_list:
      print(file.strip("[']"))
  except:
    print("Directory not found, have you created a note yet?")

def search_notes():
  pass

def delete_line():
  pass

def main():
  if args.read:
    read_notes()
  elif args.browse:
    browse_notes(args.browse)
  elif args.list:
    list_notes()
  elif args.add:
    write_note(args.add)
  else:
    parser.print_help()

if __name__ == "__main__":
  main()
